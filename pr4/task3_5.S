/*
 * Программа ввода кодов цифровых символов в буфер в ОП
 * Модифицированна для записи числового значения последней цифры в %eax при нажатии Enter
 * и завершения работы при заполнении буфера
*/

.include "my-macro"

.bss
    .lcomm buf, 100  # 100 байтовый буфер для кодов прочитанных символов
    .lcomm c, 1      # однобайтовый буфер для чтения байта из файла stdin
    .lcomm l, 4	 # Последнее число для запоминания @@@	
.text
.global _start

_start:
    sub    %esi, %esi  # указатель адреса байта в буфере buf (индексный регистр)
    movl   $'0', l     # инициализация (числовое значение последней цифры = 0) @@@
	
show_prompt:
    Puts "Вводите цифру, друг мой!"  # макровызов вывода строки в
                                     # файл stdout (подсказка ввода)

kbd_input:
    Getchar $c  # макровызов ввода байта из stdin в
                # промежуточный буфер c

    cmpl $0, %eax  # наступило событие EOF (конец файла stdin) ?
    je stop        # Да - на завершение программы

    movb c, %al	
    cmpb $'\n', %al  # это символ перевода строки ?
    je handle_enter  # ДА - Обработать нажатие Enter @@@

    cmpb $'9', c      # код больше кода символа '9' ?
    ja print_err_msg  # ДА - на вывод сообщения об ошибке
    cmpb $'0', c      # код меньше кода символа '0' ?
    jb print_err_msg  # ДА - на вывод сообщения об ошибке

    Puts "Число успешно считано и апрапраати  ап а пмим ими сим итм имим тпам и им и мтип ттимиттмитм ит м тим титимитм тимитм тммитмитм им имитим им им им им им м митимитмти мтптрмимиит\n"
    movl $0, %eax
    movb c, %al     # передать код символа цифры из c в al
    subb $'0', %al  # преобразовываем ASCII-код в числовое значение
				#(вычетаем код '0') @@@
   
	movl %eax, l	     # сохраняем числовое значение в l @@@
	## movb %al, l
	## movzbl %al, l

    cmpl $100, %esi  #проверяем, достигнут ли счётчик размера буфера @@@
    je buffer_full   #Да - завершить с сообщением. @@@    
	
    movb %al, buf(%esi)  # передать код символа цифры из al в байт
                             # буфера по адресу &buf + esi
    incl %esi  # указать на следующий байт буфера для следующего кода
	
    Puts "Цифра! Хорошо."  # сообщения об успехе вводе

    jmp show_prompt  # на ввод следующего символа

handle_enter:
    movl l, %eax  #Записываем числовое значение последней цифры в %eax @@@
    Puts "Enter нажат. Теперь числовое значение последней цифры в %eax"
    jmp show_prompt  #Возвращаемся ко вводу следующего символа @@@
	
print_err_msg:
    Puts "Не цифровая клавиша. Повторите ввод"    # вывод сообщения об ошибке
    jmp show_prompt     # на ввод следующего символа

buffer_full:
    Puts "Буфер заполнен. Завершение работы."
    jmp stop  #Вызываем завершение программы @@@

stop:
    Exit $0

.end
